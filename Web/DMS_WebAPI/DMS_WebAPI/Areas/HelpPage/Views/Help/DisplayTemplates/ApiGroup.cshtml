@using System.Web.Http
@using System.Web.Http.Controllers
@using System.Web.Http.Description
@using DMS_WebAPI.Areas.HelpPage
@using DMS_WebAPI.Areas.HelpPage.Models
@model IGrouping<HttpControllerDescriptor, ApiDescription>

@{
    var controllerDocumentation = ViewBag.DocumentationProvider != null ?
        ViewBag.DocumentationProvider.GetDocumentation(Model.Key) :
        null;

}

@*@if (@Model.Key.ControllerName.Contains("Info") || @Model.Key.ControllerName == "Lists")
{
    <h1 id="@Model.Key.ControllerName.Replace("Info", "")">  @Model.Key.ControllerName.Replace("Info", "")</h1>
}
@if (@Model.Key.ControllerName == "Settings")
{
    <h1 id="System">System</h1>
}*@
@*<h2 id="@Model.Key.ControllerName">@Model.Key.ControllerName</h2>*@
@if (!String.IsNullOrEmpty(controllerDocumentation))
{
    <h2 id="@Model.Key.ControllerName">@controllerDocumentation</h2>
}

@if (!Model.Key.ControllerType.CustomAttributes.Any(x => x.AttributeType.Name == "DimanicAuthorizeAttribute"))
{
  <div class="access_unlimited">
    <span data-container="body" data-toggle="popover"
          data-placement="bottom" data-trigger="hover"
          data-content="Для вызова API нужна только авторизация"><strong>Доступ не ограничен </strong> </span>
  </div>
}

<table class="help-page-table">
  @*<thead>
      <tr><th>API</th><th>Description</th></tr>
    </thead>*@
  <tbody>
    @foreach (var api in Model)
    {
        <tr>
          <td class="api-name">
            @{
                HelpPageApiModel apiModel = GlobalConfiguration.Configuration.GetHelpPageApiModel(api.GetFriendlyId());
                var text = string.Empty;
                var curMethod = api.HttpMethod.Method;

                if ("GET" == @curMethod)
                {
                  if (apiModel.ResourceProperties != null && apiModel.ResourceProperties.Count > 0)
                  {

                        <a href="@Url.Action("Api", "Help", new { apiId = api.GetFriendlyId() })"
                           data-container="body" data-toggle="popover"
                           title="Возвращает" data-placement="right" data-trigger="hover"
                           data-content=@foreach (var item in apiModel.ResourceProperties.OrderBy(x => DMS_WebAPI.Areas.HelpPage.App_Start.Helper.GetOrderedName(x.Name)))
                           {
                             @Html.Raw(item.Name + "&ensp;");
                           }>
                          @api.HttpMethod.Method @api.GetFriendlyName()
                        </a>
                        @*<a href="@Url.Action("Api", "Help", new { apiId = api.GetFriendlyId() })"
                           data-container="body" data-toggle="popover"
                           title="Возвращает" data-placement="right" data-trigger="hover"
                           data-content=@DMS_WebAPI.Areas.HelpPage.App_Start.Helper.GetParametrs(apiModel.ResourceProperties, "&ensp;", false, false)>
                          @api.HttpMethod.Method @api.GetFriendlyName()
                        </a>*@

                  }
                  else
                  {
                        <a href="@Url.Action("Api", "Help", new { apiId = api.GetFriendlyId() })">
                          @api.HttpMethod.Method @api.GetFriendlyName()
                        </a>
                  }

                  @Html.Raw(DMS_WebAPI.Areas.HelpPage.App_Start.Helper.GetParametrs(apiModel.UriParameters));

                }

                else if ("POST,PUT".Contains(@api.HttpMethod.Method))
                {

                    <a href="@Url.Action("Api", "Help", new { apiId = api.GetFriendlyId() })">
                      @api.HttpMethod.Method @api.GetFriendlyName()
                    </a>

                  if (apiModel.RequestBodyParameters != null)
                  { 
                    @Html.Raw(DMS_WebAPI.Areas.HelpPage.App_Start.Helper.GetParametrs(apiModel.RequestBodyParameters));
                  }

                }
                else
                {
                    <a href="@Url.Action("Api", "Help", new { apiId = api.GetFriendlyId() })">
                      @api.HttpMethod.Method @api.GetFriendlyName()
                    </a>
                }


            }

          </td>

          <td class="api-documentation">
            @if (api.Documentation != null)
            {
                <p>@api.Documentation</p>
            }
            else
            {
                <p>No documentation available.</p>
            }
          </td>
        </tr>
                }
  </tbody>
</table>

